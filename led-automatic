// Importando as bibliotecas
#include <ESP8266WiFi.h>
#include <PubSubClient.h>

// Adicionando nome e senha Wifi e servidor MQTT Broker:
const char* ssid = "Bronxs"; // adicionar o nome da rede
const char* password = "quatroevinte"; // adicionar a senha da rede
const char* mqtt_server = "broker.mqttdashboard.com"; // endereço mqtt broker


WiFiClient espClient; //usada para estabelecer uma conexão com uma rede WiF
PubSubClient client(espClient); //usada para conectar a um servidor MQTT

// Função para conectar a rede wifi:
void setup_wifi() {

  delay(10);
 
  // Conectando a uma rede WiFi:
  Serial.println();
  Serial.print("Conectando a");
  Serial.println(ssid); // nome da rede

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  randomSeed(micros());

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

// Função para ler as mensagens recebidas do MQTT:
void callback(char* topic, byte* payload, unsigned int length) {
 
  Serial.print("Mensagem que chegou [");
  Serial.print(topic);
  Serial.print("] ");
  //Serial.print(payload);
 


  // Verificação para leitura (liga e desliga:
  if ((char)payload[0] == '1') {

    // desligando o led da placa:
    digitalWrite(BUILTIN_LED, LOW);

    // desligando a luz:
    digitalWrite(14, LOW);  
   
  } else {
   
    // Ligando o LED da placa:
    digitalWrite(BUILTIN_LED, HIGH);  

    // Ligando a Luz:
    digitalWrite(14, HIGH);
   
  }


}

// Loop até nos reconectarmos:
void reconnect() {
 
  while (!client.connected()) {
   
    Serial.print("Tentando conexão MQTT...");
   
    // Criando o Client ID:
    String clientId = "ESP8266Client-";
    clientId += String(random(0xffff), HEX);
   
    // Tentativa de conexão
    if (client.connect(clientId.c_str())) {
     
      Serial.println("conectado com sucesso.");
      client.subscribe("testtopic");
     
    } else {
     
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" proxima tentativa em 5 segundos . . .");
      delay(5000);
     
    }
  }
}

void setup() {
 
  pinMode(BUILTIN_LED, OUTPUT);// Initialize the BUILTIN_LED pin as an output
  pinMode(14, OUTPUT);
  Serial.begin(115200);
  setup_wifi();
  client.setServer(mqtt_server, 1883);
  client.setCallback(callback);
 
}



void loop() {
 
 if (!client.connected()) {
    reconnect();
  }
 
  client.loop();

}
